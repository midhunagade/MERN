{"version":3,"file":"static/js/830.8fcefc7b.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport \"./PlaceForm.css\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst UpdatePlace = () => {\r\n  const placeId = useParams().placeId;\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [identifiedPlace, setIdentifiedPlace] = useState();\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlaceById = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/places/${placeId}`\r\n        );\r\n        console.log(responseData.place);\r\n        setIdentifiedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place?.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.place?.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaceById();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  /* useEffect(() => {\r\n    if (identifiedPlace) {\r\n      setFormData(\r\n        {\r\n          title: {\r\n            value: identifiedPlace?.title,\r\n            isValid: true,\r\n          },\r\n          description: {\r\n            value: identifiedPlace?.description,\r\n            isValid: true,\r\n          },\r\n        },\r\n        true\r\n      );\r\n    }\r\n    setIsLoading(false);\r\n  }, [setFormData, identifiedPlace]); */\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!identifiedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find the place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const placeUpdateSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/api/places/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: 'Bearer ' + auth.token\r\n        }\r\n      );\r\n      history.push(`/${auth.userId}/places`)\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && identifiedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            element=\"input\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title\"\r\n            onInput={inputHandler}\r\n            initialValue={identifiedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            element=\"textarea\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (at least 5 characters)\"\r\n            onInput={inputHandler}\r\n            initialValue={identifiedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {\" \"}\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useReducer, useEffect } from \"react\";\r\nimport \"./Input.css\";\r\nimport { validate } from \"../../util/validators\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isValid: props.initialValid || false,\r\n    isTouched: false,\r\n  });\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n\r\n  const {id, onInput} = props;\r\n  const {value, isValid} = inputState;\r\n  \r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  },[id, value, isValid, onInput])\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n      /> \r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport './Modal.css';\r\nimport ReactDOM from 'react-dom';\r\nimport Backdrop from './Backdrop';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form onSubmit={props.onSubmit ? props.onSubmit : event => event.preventDefault()}>\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'))\r\n}\r\n\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modal;","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if(!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        }\r\n        else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: {\r\n            value: action.value,\r\n            isValid: action.isValid,\r\n          }\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  })\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId: id});\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({type: 'SET_DATA', inputs: inputData, formIsValid: formValidity})\r\n  }, [])\r\n\r\n  return [formState, inputHandler, setFormData]\r\n}","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = \"GET\",\r\n    body = null,\r\n    headers = {}\r\n  ) => {\r\n\r\n    setIsLoading(true);\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal\r\n      });\r\n      const responseData = await response.json();\r\n\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n      setIsLoading(false);\r\n      return responseData;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setIsLoading(false);\r\n      throw err;\r\n    }\r\n\r\n    \r\n  },[]);\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    return (() => {\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    })\r\n  }, [])\r\n\r\n  return {isLoading, error, sendRequest, clearError}\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["UpdatePlace","placeId","useParams","isLoading","error","sendRequest","clearError","useHttpClient","identifiedPlace","setIdentifiedPlace","useState","history","useHistory","auth","useContext","AuthContext","formState","inputHandler","setFormData","useForm","title","value","isValid","description","useEffect","async","_responseData$place","_responseData$place2","responseData","process","REACT_APP_BACKEND_URL","console","log","place","err","fetchPlaceById","_jsx","className","children","LoadingSpinner","Card","_jsxs","_Fragment","ErrorModal","onClear","onSubmit","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","Input","id","type","label","element","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","props","href","size","inverse","danger","to","Link","exact","onClick","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","useRef","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","response","fetch","signal","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}