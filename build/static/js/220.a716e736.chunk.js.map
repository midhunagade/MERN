{"version":3,"file":"static/js/220.a716e736.chunk.js","mappings":"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","sources":["shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","user/pages/Auth.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if(!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () =>{\r\n      setPreviewUrl(fileReader.result);\r\n    }\r\n    fileReader.readAsDataURL(file); \r\n  },[file])\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid;\r\n    if(event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  }\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        type=\"file\"\r\n        id={props.id}\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.png,.jpeg\"\r\n        ref={filePickerRef}\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useState, useReducer, useEffect } from \"react\";\r\nimport \"./Input.css\";\r\nimport { validate } from \"../../util/validators\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isValid: props.initialValid || false,\r\n    isTouched: false,\r\n  });\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n\r\n  const {id, onInput} = props;\r\n  const {value, isValid} = inputState;\r\n  \r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  },[id, value, isValid, onInput])\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n      /> \r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport './Modal.css';\r\nimport ReactDOM from 'react-dom';\r\nimport Backdrop from './Backdrop';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form onSubmit={props.onSubmit ? props.onSubmit : event => event.preventDefault()}>\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'))\r\n}\r\n\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modal;","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if(!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        }\r\n        else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: {\r\n            value: action.value,\r\n            isValid: action.isValid,\r\n          }\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  })\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId: id});\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({type: 'SET_DATA', inputs: inputData, formIsValid: formValidity})\r\n  }, [])\r\n\r\n  return [formState, inputHandler, setFormData]\r\n}","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = \"GET\",\r\n    body = null,\r\n    headers = {}\r\n  ) => {\r\n\r\n    setIsLoading(true);\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal\r\n      });\r\n      const responseData = await response.json();\r\n\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n      setIsLoading(false);\r\n      return responseData;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setIsLoading(false);\r\n      throw err;\r\n    }\r\n\r\n    \r\n  },[]);\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    return (() => {\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    })\r\n  }, [])\r\n\r\n  return {isLoading, error, sendRequest, clearError}\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport \"./Auth.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nconst Auth = () => {\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const auth = useContext(AuthContext);\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState.inputs)\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/users/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('email', formState.inputs.email.value);\r\n        formData.append('name', formState.inputs.name.value);\r\n        formData.append('password', formState.inputs.password.value);\r\n        formData.append('image', formState.inputs.image.value);\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/api/users/signup`,\r\n          \"POST\",\r\n          formData\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) { }\r\n    }\r\n  };\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required!</h2>\r\n        <hr />\r\n        <form className=\"place-form\" onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              element=\"input\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && <ImageUpload id='image' center onInput={inputHandler} errorText='Please provide an image'/>}\r\n          <Input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            element=\"input\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            element=\"input\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, atleast 6 characters\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["props","href","_jsx","className","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","file","setFile","useState","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","id","style","display","accept","ref","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","pickImageHandler","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","_Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","forEach","abortCtrl","abort","clearError","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","Auth","isLoginMode","setIsLoginMode","auth","useContext","AuthContext","inputHandler","setFormData","email","password","ErrorModal","Card","LoadingSpinner","asOverlay","console","log","process","REACT_APP_BACKEND_URL","JSON","stringify","login","userId","token","formData","FormData","append","name","image","Input","ImageUpload","switchModeHandler","prevMode"],"sourceRoot":""}