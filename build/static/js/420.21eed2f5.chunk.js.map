{"version":3,"file":"static/js/420.21eed2f5.chunk.js","mappings":"gLAkDA,MAuBA,EAvBYA,IACV,MAAMC,GAASC,EAAAA,EAAAA,WAET,OAAEC,EAAM,KAAEC,GAASJ,EAWzB,OATAK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAM,IAAIC,OAAOC,OAAOC,KAAKC,IAAIT,EAAOU,QAAS,CACrDR,OAAQA,EACRC,KAAMA,IAGR,IAAIG,OAAOC,OAAOC,KAAKG,OAAO,CAAEC,SAAUV,EAAQG,IAAKA,GAAM,GAC5D,CAACH,EAAQC,KAGVU,EAAAA,EAAAA,KAAA,OACEC,IAAKd,EACLe,UAAW,OAAOhB,EAAMgB,YACxBC,MAAOjB,EAAMiB,OACR,E,wCC1DX,MAuGA,EAvGmBjB,IACjB,MAAOkB,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAkBC,IAAuBF,EAAAA,EAAAA,WAAS,GACnDG,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAClB,UAAEC,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,KAMhDC,EAAkBA,KACtBZ,GAAW,EAAM,EAOba,EAAsBA,KAC1BV,GAAoB,EAAM,EAkB5B,OACEW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACErB,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACT,MAAOA,EAAOU,QAASR,IAClCH,IAAaZ,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,CAACC,WAAS,KACvCzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJC,KAAMvB,EACNwB,SAAUX,EACVY,OAAQ3C,EAAM4C,QACdC,aAAa,4BACbC,YAAY,4BACZC,QAAQjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACC,QAASlB,EAAgBI,SAAC,UAAeA,UAEzDrB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAemB,UAC5BrB,EAAAA,EAAAA,KAACJ,EAAG,SAGRI,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJC,KAAMpB,EACNqB,SAAUV,EACVW,OAAO,gBACPG,YAAY,4BACZC,QACEd,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACErB,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACE,SAAO,EAACD,QAASjB,EAAoBG,SAAC,WAEpC,KACVrB,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACG,QAAM,EAACF,QAzCIG,UAC3B9B,GAAoB,GACpB,UACQM,EACJ,GAAGyB,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,oCAAoCtD,EAAMuD,KACzD,SACA,KACA,CACEC,cAAe,UAAYjC,EAAKkC,QAGpCzD,EAAM0D,SAAS1D,EAAMuD,GACvB,CAAE,MAAOI,GAAM,GA6BsCxB,SAAC,cAIjDA,UAEDrB,EAAAA,EAAAA,KAAA,KAAAqB,SAAG,qGAKLrB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYmB,UACxBF,EAAAA,EAAAA,MAAC2B,EAAAA,EAAI,CAAC5C,UAAU,sBAAqBmB,SAAA,EACnCrB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBmB,UAChCrB,EAAAA,EAAAA,KAAA,OAAK+C,IAAK,GAAGR,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,yBAAyBtD,EAAM8D,QAASC,IAAK/D,EAAMgE,WAE9E/B,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,mBAAkBmB,SAAA,EAC/BrB,EAAAA,EAAAA,KAAA,MAAAqB,SAAKnC,EAAMgE,SACXlD,EAAAA,EAAAA,KAAA,MAAAqB,SAAKnC,EAAM4C,WACX9B,EAAAA,EAAAA,KAAA,KAAAqB,SAAInC,EAAMiE,kBAEZhC,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,sBAAqBmB,SAAA,EAClCrB,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACE,SAAO,EAACD,QA/EHiB,KACrB/C,GAAW,EAAK,EA8EgCgB,SAAC,gBAGxCZ,EAAK4C,SAAWnE,EAAMoE,YACrBtD,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACqB,GAAI,WAAWrE,EAAMuD,KAAKpB,SAAC,SAEpCZ,EAAK4C,SAAWnE,EAAMoE,YACrBtD,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACG,QAAM,EAACF,QA9EMqB,KAC/BhD,GAAoB,EAAK,EA6EkCa,SAAC,qBAOzD,EC1EP,EA9BmBnC,IAAW,IAADuE,EAC3B,OAA6B,KAApB,OAALvE,QAAK,IAALA,GAAY,QAAPuE,EAALvE,EAAOwE,aAAK,IAAAD,OAAP,EAALA,EAAcE,SAEd3D,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBmB,UAChCF,EAAAA,EAAAA,MAAC2B,EAAAA,EAAI,CAAAzB,SAAA,EACHrB,EAAAA,EAAAA,KAAA,MAAAqB,SAAI,wCACJrB,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACqB,GAAG,cAAalC,SAAC,sBAM/BrB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYmB,SAClB,OAALnC,QAAK,IAALA,OAAK,EAALA,EAAOwE,MAAMlE,KAAKoE,IACjB5D,EAAAA,EAAAA,KAAC6D,EAAS,CAERpB,GAAImB,EAAMnB,GACVO,MAAOY,EAAMZ,MACbE,MAAOU,EAAMV,MACbC,YAAaS,EAAMT,YACnBrB,QAAS8B,EAAM9B,QACfwB,UAAWM,EAAME,QACjBC,YAAaH,EAAMI,SACnBpB,SAAU1D,EAAM+E,eARXL,EAAMnB,OAWZ,E,aCzBT,MA+BA,EA/BoBvD,IAClB,MAAM,UAAE0B,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,KAChDqC,GAASa,EAAAA,EAAAA,KAAYb,QACpBc,EAAcC,IAAmB9D,EAAAA,EAAAA,UAAS,KAEjDf,EAAAA,EAAAA,YAAU,KACY+C,WAClB,IACE,MAAM+B,QAAqBvD,EACzB,GAAGyB,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,yCAAyCa,KAE1DiB,QAAQC,IAAIF,EAAaG,QACzBJ,EAAgBC,EAAaG,OAC/B,CAAE,MAAO3B,GAAM,GAEjB4B,EAAa,GACZ,CAAC3D,EAAauC,IAMjB,OACElC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACArB,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACT,MAAOA,EAAOU,QAASR,IAClCH,IAAaZ,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,KAC3BZ,GAAauD,IAAgBnE,EAAAA,EAAAA,KAAC0E,EAAS,CAAChB,MAAOS,EAAcF,cARtCU,IACzBP,GAAgBQ,GAAcA,EAAWC,QAAOjB,GAASA,EAAMnB,KAAOkC,KAAgB,MAQnF,C,6DC7BP,MAqCA,EArCezF,GACTA,EAAM4F,MAEN9E,EAAAA,EAAAA,KAAA,KACEE,UAAW,kBAAkBhB,EAAM6F,MAAQ,aAAa7F,EAAMkD,SAC5D,qBAAqBlD,EAAMmD,QAAU,mBACvCyC,KAAM5F,EAAM4F,KAAKzD,SAEhBnC,EAAMmC,WAITnC,EAAMqE,IAENvD,EAAAA,EAAAA,KAACgF,EAAAA,GAAI,CACHzB,GAAIrE,EAAMqE,GACV0B,MAAO/F,EAAM+F,MACb/E,UAAW,kBAAkBhB,EAAM6F,MAAQ,aAAa7F,EAAMkD,SAC5D,qBAAqBlD,EAAMmD,QAAU,mBAAmBhB,SAEzDnC,EAAMmC,YAKXrB,EAAAA,EAAAA,KAAA,UACEE,UAAW,kBAAkBhB,EAAM6F,MAAQ,aAAa7F,EAAMkD,SAC5D,qBAAqBlD,EAAMmD,QAAU,mBACvC6C,KAAMhG,EAAMgG,KACZ/C,QAASjD,EAAMiD,QACfgD,SAAUjG,EAAMiG,SAAS9D,SAExBnC,EAAMmC,U,oDCjCb,MAQA,EARanC,IAETc,EAAAA,EAAAA,KAAA,OAAKE,UAAW,QAAQhB,EAAMgB,YAAaC,MAAOjB,EAAMiB,MAAMkB,SAC3DnC,EAAMmC,U,sECFb,MAaA,EAbmBnC,IAEfc,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJE,SAAU1C,EAAMqC,QAChBM,OAAO,qBACPF,OAAQzC,EAAM2B,MACdoB,QAAQjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACC,QAASjD,EAAMqC,QAAQF,SAAC,SAAcA,UAEtDrB,EAAAA,EAAAA,KAAA,KAAAqB,SAAInC,EAAM2B,S,6ECPhB,MAAMuE,EAAelG,IACnB,MAAMmG,GACJlE,EAAAA,EAAAA,MAAA,OAAKjB,UAAW,SAAShB,EAAMgB,YAAaC,MAAOjB,EAAMiB,MAAMkB,SAAA,EAC7DrB,EAAAA,EAAAA,KAAA,UAAQE,UAAW,iBAAiBhB,EAAMoG,cAAcjE,UACtDrB,EAAAA,EAAAA,KAAA,MAAAqB,SAAKnC,EAAM2C,YAEbV,EAAAA,EAAAA,MAAA,QAAMoE,SAAUrG,EAAMqG,SAAWrG,EAAMqG,SAAWC,GAASA,EAAMC,iBAAiBpE,SAAA,EAChFrB,EAAAA,EAAAA,KAAA,OAAKE,UAAW,kBAAkBhB,EAAM6C,eAAeV,SACpDnC,EAAMmC,YAETrB,EAAAA,EAAAA,KAAA,UAAQE,UAAW,iBAAiBhB,EAAM8C,cAAcX,SACrDnC,EAAM+C,eAKf,OAAOyD,EAAAA,aAAsBL,EAASM,SAASC,eAAe,cAAc,EAe9E,EAXc1G,IAEViC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGnC,EAAMyC,OAAQ3B,EAAAA,EAAAA,KAAC6F,EAAAA,EAAQ,CAAC1D,QAASjD,EAAM0C,YACxC5B,EAAAA,EAAAA,KAAC8F,EAAAA,EAAa,CAACC,GAAI7G,EAAMyC,KAAMqE,cAAY,EAACC,eAAa,EAACC,QAAS,IAAKC,WAAW,QAAO9E,UACxFrB,EAAAA,EAAAA,KAACoF,EAAY,IAAKlG,Q,6CC7BnB,MAAM8B,EAAgBA,KAC3B,MAAOJ,EAAWwF,IAAgB9F,EAAAA,EAAAA,WAAS,IACpCO,EAAOwF,IAAY/F,EAAAA,EAAAA,YACpBgG,GAAqBlH,EAAAA,EAAAA,QAAO,IAE5B0B,GAAcyF,EAAAA,EAAAA,cAAYjE,eAC9BkE,GAII,IAHJC,EAAMC,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,GAAAA,UAAA,GAAG,MACTE,EAAIF,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,GAAAA,UAAA,GAAG,KACPG,EAAOH,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGXN,GAAa,GACb,MAAMU,EAAgB,IAAIC,gBAC1BT,EAAmBzG,QAAQmH,KAAKF,GAEhC,IACE,MAAMG,QAAiBC,MAAMV,EAAK,CAChCC,SACAG,OACAC,UACAM,OAAQL,EAAcK,SAElB9C,QAAqB4C,EAASG,OAIpC,GAFAd,EAAmBzG,QAAUyG,EAAmBzG,QAAQgF,QAAOwC,GAAWA,IAAYP,KAEjFG,EAASK,GACZ,MAAM,IAAIC,MAAMlD,EAAamD,SAG/B,OADApB,GAAa,GACN/B,CACT,CAAE,MAAOxB,GAGP,MAFAwD,EAASxD,EAAI2E,SACbpB,GAAa,GACPvD,CACR,CAGF,GAAE,IAYF,OANAtD,EAAAA,EAAAA,YAAU,IACA,KACN+G,EAAmBzG,QAAQ4H,SAAQC,GAAaA,EAAUC,SAAQ,GAEnE,IAEI,CAAC/G,YAAWC,QAAOC,cAAaC,WAVpBA,KACjBsF,EAAS,KAAK,EASkC,C","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js"],"sourcesContent":["/* import React from 'react';\r\nimport './Map.css';\r\n\r\nconst Map = (props) => {\r\n  return <div className={`map ${props.className}`} style={props.style}></div>\r\n}\r\n\r\nexport default Map; */\r\n\r\n/* \r\nimport React, { useRef, useEffect } from 'react';\r\n \r\nimport './Map.css';\r\n \r\nconst Map = props => {\r\n  const mapRef = useRef();\r\n  \r\n  const { center, zoom } = props;\r\n \r\n  useEffect(() => {\r\n    new window.ol.Map({\r\n      target: mapRef.current.id,\r\n      layers: [\r\n        new window.ol.layer.Tile({\r\n          source: new window.ol.source.OSM()\r\n        })\r\n      ],\r\n      view: new window.ol.View({\r\n        center: window.ol.proj.fromLonLat([center.lng, center.lat]),\r\n        zoom: zoom\r\n      })\r\n    });\r\n  }, [center, zoom]);\r\n \r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n      id=\"map\"\r\n    ></div>\r\n  );\r\n};\r\n \r\nexport default Map; */\r\n\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n  const mapRef = useRef();\r\n  \r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom\r\n    });\r\n  \r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);  \r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./PlaceItem.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const openMapHandler = () => {\r\n    setShowMap(true);\r\n  };\r\n\r\n  const closeMapHandler = () => {\r\n    setShowMap(false);\r\n  };\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/api/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token \r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>{\" \"}\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          <div className=\"place-item__image\">\r\n            <img src={`${process.env.REACT_APP_BACKEND_URL}/${props.image}`} alt={props.title} />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\nimport \"./PlaceList.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nconst PlaceList = (props) => {\r\n  if (props?.items?.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to='/places/new'>Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props?.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst UserPlaces = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const userId = useParams().userId;\r\n  const [loadedPlaces, setLoadedPlaces] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/places/user/${userId}`\r\n        );\r\n        console.log(responseData.places);\r\n        setLoadedPlaces(responseData.places)\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeleteHandler = deletedPlaceId => {\r\n    setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedPlaceId))\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <ErrorModal error={error} onClear={clearError} />\r\n    {isLoading && <LoadingSpinner />}\r\n    {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeleteHandler} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport './Modal.css';\r\nimport ReactDOM from 'react-dom';\r\nimport Backdrop from './Backdrop';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form onSubmit={props.onSubmit ? props.onSubmit : event => event.preventDefault()}>\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'))\r\n}\r\n\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modal;","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = \"GET\",\r\n    body = null,\r\n    headers = {}\r\n  ) => {\r\n\r\n    setIsLoading(true);\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal\r\n      });\r\n      const responseData = await response.json();\r\n\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n      setIsLoading(false);\r\n      return responseData;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setIsLoading(false);\r\n      throw err;\r\n    }\r\n\r\n    \r\n  },[]);\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    return (() => {\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    })\r\n  }, [])\r\n\r\n  return {isLoading, error, sendRequest, clearError}\r\n};\r\n"],"names":["props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","Map","current","Marker","position","_jsx","ref","className","style","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","closeMapHandler","cancelDeleteHandler","_jsxs","_Fragment","children","ErrorModal","onClear","LoadingSpinner","asOverlay","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","inverse","danger","async","process","REACT_APP_BACKEND_URL","id","Authorization","token","onDelete","err","Card","src","image","alt","title","description","openMapHandler","userId","creatorId","to","showDeleteWarningHandler","_props$items","items","length","place","PlaceItem","creator","coordinates","location","onDeletePlace","useParams","loadedPlaces","setLoadedPlaces","responseData","console","log","places","fetchPlaces","PlaceList","deletedPlaceId","prevPlaces","filter","href","size","Link","exact","type","disabled","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useCallback","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","json","reqCtrl","ok","Error","message","forEach","abortCtrl","abort"],"sourceRoot":""}