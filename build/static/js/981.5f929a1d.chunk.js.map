{"version":3,"file":"static/js/981.5f929a1d.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useCallback, useContext, useReducer } from \"react\";\r\nimport \"./PlaceForm.css\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nfunction NewPlace() {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n        formData.append('title', formState.inputs.title.value);\r\n        formData.append('description', formState.inputs.description.value);\r\n        formData.append('address', formState.inputs.address.value);\r\n        formData.append('image', formState.inputs.image.value);\r\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/api/places`,\r\n        'POST',\r\n        formData,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token\r\n        });\r\n      history.push('/');\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          element=\"input\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          label=\"description\"\r\n          element=\"textarea\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters)\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          type=\"text\"\r\n          label=\"Address\"\r\n          element=\"input\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload id='image' center onInput={inputHandler} errorText='Please provide an image'/>\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewPlace;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if(!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () =>{\r\n      setPreviewUrl(fileReader.result);\r\n    }\r\n    fileReader.readAsDataURL(file); \r\n  },[file])\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid;\r\n    if(event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  }\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        type=\"file\"\r\n        id={props.id}\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.png,.jpeg\"\r\n        ref={filePickerRef}\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useState, useReducer, useEffect } from \"react\";\r\nimport \"./Input.css\";\r\nimport { validate } from \"../../util/validators\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isValid: props.initialValid || false,\r\n    isTouched: false,\r\n  });\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n\r\n  const {id, onInput} = props;\r\n  const {value, isValid} = inputState;\r\n  \r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  },[id, value, isValid, onInput])\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n      /> \r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport './Modal.css';\r\nimport ReactDOM from 'react-dom';\r\nimport Backdrop from './Backdrop';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form onSubmit={props.onSubmit ? props.onSubmit : event => event.preventDefault()}>\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'))\r\n}\r\n\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modal;","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if(!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        }\r\n        else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: {\r\n            value: action.value,\r\n            isValid: action.isValid,\r\n          }\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  })\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId: id});\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({type: 'SET_DATA', inputs: inputData, formIsValid: formValidity})\r\n  }, [])\r\n\r\n  return [formState, inputHandler, setFormData]\r\n}","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = \"GET\",\r\n    body = null,\r\n    headers = {}\r\n  ) => {\r\n\r\n    setIsLoading(true);\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal\r\n      });\r\n      const responseData = await response.json();\r\n\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n      setIsLoading(false);\r\n      return responseData;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setIsLoading(false);\r\n      throw err;\r\n    }\r\n\r\n    \r\n  },[]);\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    return (() => {\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    })\r\n  }, [])\r\n\r\n  return {isLoading, error, sendRequest, clearError}\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","formState","inputHandler","useForm","title","value","isValid","description","address","image","history","useHistory","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","className","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","process","REACT_APP_BACKEND_URL","Authorization","token","push","err","LoadingSpinner","asOverlay","Input","id","type","label","element","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","center","Button","disabled","props","href","size","inverse","danger","to","Link","exact","onClick","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","style","display","accept","ref","onChange","pickedFile","fileIsValid","target","files","length","src","alt","pickImageHandler","current","click","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}